
ouija.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003a8  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000042c  20000000  000003a8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  2000042c  000007d4  0002042c  2**2
                  ALLOC
  3 .stack        00002004  2000046c  00000814  0002042c  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  0002042c  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020454  2**0
                  CONTENTS, READONLY
  6 .debug_info   00003ae2  00000000  00000000  000204ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000028c  00000000  00000000  00023f8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000078  00000000  00000000  0002421b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000048  00000000  00000000  00024293  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000028  00000000  00000000  000242db  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00012458  00000000  00000000  00024303  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00000dd6  00000000  00000000  0003675b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00071927  00000000  00000000  00037531  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00000220  00000000  00000000  000a8e58  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
   0:	70 24 00 20 19 01 00 00 15 01 00 00 15 01 00 00     p$. ............
	...
  2c:	15 01 00 00 00 00 00 00 00 00 00 00 15 01 00 00     ................
  3c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  4c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  5c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  6c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  7c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  8c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  9c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  ac:	15 01 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
  b4:	b510      	push	{r4, lr}
  b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
  b8:	7823      	ldrb	r3, [r4, #0]
  ba:	2b00      	cmp	r3, #0
  bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
  be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
  c0:	2b00      	cmp	r3, #0
  c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
  c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
  c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
  c8:	bf00      	nop
  ca:	2301      	movs	r3, #1
  cc:	7023      	strb	r3, [r4, #0]
  ce:	bd10      	pop	{r4, pc}
  d0:	2000042c 	.word	0x2000042c
  d4:	00000000 	.word	0x00000000
  d8:	000003a8 	.word	0x000003a8

000000dc <frame_dummy>:
  dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
  de:	b510      	push	{r4, lr}
  e0:	2b00      	cmp	r3, #0
  e2:	d003      	beq.n	ec <frame_dummy+0x10>
  e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
  e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
  e8:	e000      	b.n	ec <frame_dummy+0x10>
  ea:	bf00      	nop
  ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
  ee:	6803      	ldr	r3, [r0, #0]
  f0:	2b00      	cmp	r3, #0
  f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
  f4:	bd10      	pop	{r4, pc}
  f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
  f8:	2b00      	cmp	r3, #0
  fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
  fc:	4798      	blx	r3
  fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
 100:	00000000 	.word	0x00000000
 104:	20000430 	.word	0x20000430
 108:	000003a8 	.word	0x000003a8
 10c:	000003a8 	.word	0x000003a8
 110:	00000000 	.word	0x00000000

00000114 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
 114:	e7fe      	b.n	114 <Dummy_Handler>
	...

00000118 <Reset_Handler>:
{
 118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
 11a:	4a23      	ldr	r2, [pc, #140]	; (1a8 <Reset_Handler+0x90>)
 11c:	4b23      	ldr	r3, [pc, #140]	; (1ac <Reset_Handler+0x94>)
 11e:	429a      	cmp	r2, r3
 120:	d009      	beq.n	136 <Reset_Handler+0x1e>
 122:	4b22      	ldr	r3, [pc, #136]	; (1ac <Reset_Handler+0x94>)
 124:	4a20      	ldr	r2, [pc, #128]	; (1a8 <Reset_Handler+0x90>)
 126:	e003      	b.n	130 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
 128:	6811      	ldr	r1, [r2, #0]
 12a:	6019      	str	r1, [r3, #0]
 12c:	3304      	adds	r3, #4
 12e:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
 130:	491f      	ldr	r1, [pc, #124]	; (1b0 <Reset_Handler+0x98>)
 132:	428b      	cmp	r3, r1
 134:	d3f8      	bcc.n	128 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
 136:	4b1f      	ldr	r3, [pc, #124]	; (1b4 <Reset_Handler+0x9c>)
 138:	e002      	b.n	140 <Reset_Handler+0x28>
                *pDest++ = 0;
 13a:	2200      	movs	r2, #0
 13c:	601a      	str	r2, [r3, #0]
 13e:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
 140:	4a1d      	ldr	r2, [pc, #116]	; (1b8 <Reset_Handler+0xa0>)
 142:	4293      	cmp	r3, r2
 144:	d3f9      	bcc.n	13a <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
 146:	4a1d      	ldr	r2, [pc, #116]	; (1bc <Reset_Handler+0xa4>)
 148:	21ff      	movs	r1, #255	; 0xff
 14a:	4b1d      	ldr	r3, [pc, #116]	; (1c0 <Reset_Handler+0xa8>)
 14c:	438b      	bics	r3, r1
 14e:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
 150:	39fd      	subs	r1, #253	; 0xfd
 152:	2390      	movs	r3, #144	; 0x90
 154:	005b      	lsls	r3, r3, #1
 156:	4a1b      	ldr	r2, [pc, #108]	; (1c4 <Reset_Handler+0xac>)
 158:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
 15a:	4a1b      	ldr	r2, [pc, #108]	; (1c8 <Reset_Handler+0xb0>)
 15c:	78d3      	ldrb	r3, [r2, #3]
 15e:	2503      	movs	r5, #3
 160:	43ab      	bics	r3, r5
 162:	2402      	movs	r4, #2
 164:	4323      	orrs	r3, r4
 166:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
 168:	78d3      	ldrb	r3, [r2, #3]
 16a:	270c      	movs	r7, #12
 16c:	43bb      	bics	r3, r7
 16e:	2608      	movs	r6, #8
 170:	4333      	orrs	r3, r6
 172:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
 174:	4b15      	ldr	r3, [pc, #84]	; (1cc <Reset_Handler+0xb4>)
 176:	7b98      	ldrb	r0, [r3, #14]
 178:	2230      	movs	r2, #48	; 0x30
 17a:	4390      	bics	r0, r2
 17c:	2220      	movs	r2, #32
 17e:	4310      	orrs	r0, r2
 180:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
 182:	7b99      	ldrb	r1, [r3, #14]
 184:	43b9      	bics	r1, r7
 186:	4331      	orrs	r1, r6
 188:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
 18a:	7b9a      	ldrb	r2, [r3, #14]
 18c:	43aa      	bics	r2, r5
 18e:	4322      	orrs	r2, r4
 190:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
 192:	4a0f      	ldr	r2, [pc, #60]	; (1d0 <Reset_Handler+0xb8>)
 194:	6851      	ldr	r1, [r2, #4]
 196:	2380      	movs	r3, #128	; 0x80
 198:	430b      	orrs	r3, r1
 19a:	6053      	str	r3, [r2, #4]
        __libc_init_array();
 19c:	4b0d      	ldr	r3, [pc, #52]	; (1d4 <Reset_Handler+0xbc>)
 19e:	4798      	blx	r3
        main();
 1a0:	4b0d      	ldr	r3, [pc, #52]	; (1d8 <Reset_Handler+0xc0>)
 1a2:	4798      	blx	r3
 1a4:	e7fe      	b.n	1a4 <Reset_Handler+0x8c>
 1a6:	46c0      	nop			; (mov r8, r8)
 1a8:	000003a8 	.word	0x000003a8
 1ac:	20000000 	.word	0x20000000
 1b0:	2000042c 	.word	0x2000042c
 1b4:	2000042c 	.word	0x2000042c
 1b8:	2000046c 	.word	0x2000046c
 1bc:	e000ed00 	.word	0xe000ed00
 1c0:	00000000 	.word	0x00000000
 1c4:	41007000 	.word	0x41007000
 1c8:	41005000 	.word	0x41005000
 1cc:	41004800 	.word	0x41004800
 1d0:	41004000 	.word	0x41004000
 1d4:	000001e1 	.word	0x000001e1
 1d8:	000001dd 	.word	0x000001dd

000001dc <main>:

#include "sam.h"


int main(void)
{
 1dc:	e7fe      	b.n	1dc <main>
	...

000001e0 <__libc_init_array>:
 1e0:	b570      	push	{r4, r5, r6, lr}
 1e2:	4e0d      	ldr	r6, [pc, #52]	; (218 <__libc_init_array+0x38>)
 1e4:	4d0d      	ldr	r5, [pc, #52]	; (21c <__libc_init_array+0x3c>)
 1e6:	2400      	movs	r4, #0
 1e8:	1bad      	subs	r5, r5, r6
 1ea:	10ad      	asrs	r5, r5, #2
 1ec:	d005      	beq.n	1fa <__libc_init_array+0x1a>
 1ee:	00a3      	lsls	r3, r4, #2
 1f0:	58f3      	ldr	r3, [r6, r3]
 1f2:	3401      	adds	r4, #1
 1f4:	4798      	blx	r3
 1f6:	42a5      	cmp	r5, r4
 1f8:	d1f9      	bne.n	1ee <__libc_init_array+0xe>
 1fa:	f000 f8c3 	bl	384 <_init>
 1fe:	4e08      	ldr	r6, [pc, #32]	; (220 <__libc_init_array+0x40>)
 200:	4d08      	ldr	r5, [pc, #32]	; (224 <__libc_init_array+0x44>)
 202:	2400      	movs	r4, #0
 204:	1bad      	subs	r5, r5, r6
 206:	10ad      	asrs	r5, r5, #2
 208:	d005      	beq.n	216 <__libc_init_array+0x36>
 20a:	00a3      	lsls	r3, r4, #2
 20c:	58f3      	ldr	r3, [r6, r3]
 20e:	3401      	adds	r4, #1
 210:	4798      	blx	r3
 212:	42a5      	cmp	r5, r4
 214:	d1f9      	bne.n	20a <__libc_init_array+0x2a>
 216:	bd70      	pop	{r4, r5, r6, pc}
 218:	00000390 	.word	0x00000390
 21c:	00000390 	.word	0x00000390
 220:	00000390 	.word	0x00000390
 224:	00000398 	.word	0x00000398

00000228 <register_fini>:
 228:	4b03      	ldr	r3, [pc, #12]	; (238 <register_fini+0x10>)
 22a:	b510      	push	{r4, lr}
 22c:	2b00      	cmp	r3, #0
 22e:	d002      	beq.n	236 <register_fini+0xe>
 230:	4802      	ldr	r0, [pc, #8]	; (23c <register_fini+0x14>)
 232:	f000 f805 	bl	240 <atexit>
 236:	bd10      	pop	{r4, pc}
 238:	00000000 	.word	0x00000000
 23c:	00000251 	.word	0x00000251

00000240 <atexit>:
 240:	b510      	push	{r4, lr}
 242:	0001      	movs	r1, r0
 244:	2300      	movs	r3, #0
 246:	2200      	movs	r2, #0
 248:	2000      	movs	r0, #0
 24a:	f000 f81f 	bl	28c <__register_exitproc>
 24e:	bd10      	pop	{r4, pc}

00000250 <__libc_fini_array>:
 250:	b570      	push	{r4, r5, r6, lr}
 252:	4b09      	ldr	r3, [pc, #36]	; (278 <__libc_fini_array+0x28>)
 254:	4c09      	ldr	r4, [pc, #36]	; (27c <__libc_fini_array+0x2c>)
 256:	1ae4      	subs	r4, r4, r3
 258:	10a4      	asrs	r4, r4, #2
 25a:	d009      	beq.n	270 <__libc_fini_array+0x20>
 25c:	4a08      	ldr	r2, [pc, #32]	; (280 <__libc_fini_array+0x30>)
 25e:	18a5      	adds	r5, r4, r2
 260:	00ad      	lsls	r5, r5, #2
 262:	18ed      	adds	r5, r5, r3
 264:	682b      	ldr	r3, [r5, #0]
 266:	3c01      	subs	r4, #1
 268:	4798      	blx	r3
 26a:	3d04      	subs	r5, #4
 26c:	2c00      	cmp	r4, #0
 26e:	d1f9      	bne.n	264 <__libc_fini_array+0x14>
 270:	f000 f892 	bl	398 <_fini>
 274:	bd70      	pop	{r4, r5, r6, pc}
 276:	46c0      	nop			; (mov r8, r8)
 278:	000003a4 	.word	0x000003a4
 27c:	000003a8 	.word	0x000003a8
 280:	3fffffff 	.word	0x3fffffff

00000284 <__retarget_lock_acquire_recursive>:
 284:	4770      	bx	lr
 286:	46c0      	nop			; (mov r8, r8)

00000288 <__retarget_lock_release_recursive>:
 288:	4770      	bx	lr
 28a:	46c0      	nop			; (mov r8, r8)

0000028c <__register_exitproc>:
 28c:	b5f0      	push	{r4, r5, r6, r7, lr}
 28e:	464e      	mov	r6, r9
 290:	4645      	mov	r5, r8
 292:	46de      	mov	lr, fp
 294:	4657      	mov	r7, sl
 296:	b5e0      	push	{r5, r6, r7, lr}
 298:	4d36      	ldr	r5, [pc, #216]	; (374 <__register_exitproc+0xe8>)
 29a:	b083      	sub	sp, #12
 29c:	0006      	movs	r6, r0
 29e:	6828      	ldr	r0, [r5, #0]
 2a0:	4698      	mov	r8, r3
 2a2:	000f      	movs	r7, r1
 2a4:	4691      	mov	r9, r2
 2a6:	f7ff ffed 	bl	284 <__retarget_lock_acquire_recursive>
 2aa:	4b33      	ldr	r3, [pc, #204]	; (378 <__register_exitproc+0xec>)
 2ac:	681c      	ldr	r4, [r3, #0]
 2ae:	23a4      	movs	r3, #164	; 0xa4
 2b0:	005b      	lsls	r3, r3, #1
 2b2:	58e0      	ldr	r0, [r4, r3]
 2b4:	2800      	cmp	r0, #0
 2b6:	d052      	beq.n	35e <__register_exitproc+0xd2>
 2b8:	6843      	ldr	r3, [r0, #4]
 2ba:	2b1f      	cmp	r3, #31
 2bc:	dc13      	bgt.n	2e6 <__register_exitproc+0x5a>
 2be:	1c5a      	adds	r2, r3, #1
 2c0:	9201      	str	r2, [sp, #4]
 2c2:	2e00      	cmp	r6, #0
 2c4:	d128      	bne.n	318 <__register_exitproc+0x8c>
 2c6:	9a01      	ldr	r2, [sp, #4]
 2c8:	3302      	adds	r3, #2
 2ca:	009b      	lsls	r3, r3, #2
 2cc:	6042      	str	r2, [r0, #4]
 2ce:	501f      	str	r7, [r3, r0]
 2d0:	6828      	ldr	r0, [r5, #0]
 2d2:	f7ff ffd9 	bl	288 <__retarget_lock_release_recursive>
 2d6:	2000      	movs	r0, #0
 2d8:	b003      	add	sp, #12
 2da:	bc3c      	pop	{r2, r3, r4, r5}
 2dc:	4690      	mov	r8, r2
 2de:	4699      	mov	r9, r3
 2e0:	46a2      	mov	sl, r4
 2e2:	46ab      	mov	fp, r5
 2e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 2e6:	4b25      	ldr	r3, [pc, #148]	; (37c <__register_exitproc+0xf0>)
 2e8:	2b00      	cmp	r3, #0
 2ea:	d03d      	beq.n	368 <__register_exitproc+0xdc>
 2ec:	20c8      	movs	r0, #200	; 0xc8
 2ee:	0040      	lsls	r0, r0, #1
 2f0:	e000      	b.n	2f4 <__register_exitproc+0x68>
 2f2:	bf00      	nop
 2f4:	2800      	cmp	r0, #0
 2f6:	d037      	beq.n	368 <__register_exitproc+0xdc>
 2f8:	22a4      	movs	r2, #164	; 0xa4
 2fa:	2300      	movs	r3, #0
 2fc:	0052      	lsls	r2, r2, #1
 2fe:	58a1      	ldr	r1, [r4, r2]
 300:	6043      	str	r3, [r0, #4]
 302:	6001      	str	r1, [r0, #0]
 304:	50a0      	str	r0, [r4, r2]
 306:	3240      	adds	r2, #64	; 0x40
 308:	5083      	str	r3, [r0, r2]
 30a:	3204      	adds	r2, #4
 30c:	5083      	str	r3, [r0, r2]
 30e:	3301      	adds	r3, #1
 310:	9301      	str	r3, [sp, #4]
 312:	2300      	movs	r3, #0
 314:	2e00      	cmp	r6, #0
 316:	d0d6      	beq.n	2c6 <__register_exitproc+0x3a>
 318:	009a      	lsls	r2, r3, #2
 31a:	4692      	mov	sl, r2
 31c:	4482      	add	sl, r0
 31e:	464a      	mov	r2, r9
 320:	2188      	movs	r1, #136	; 0x88
 322:	4654      	mov	r4, sl
 324:	5062      	str	r2, [r4, r1]
 326:	22c4      	movs	r2, #196	; 0xc4
 328:	0052      	lsls	r2, r2, #1
 32a:	4691      	mov	r9, r2
 32c:	4481      	add	r9, r0
 32e:	464a      	mov	r2, r9
 330:	3987      	subs	r1, #135	; 0x87
 332:	4099      	lsls	r1, r3
 334:	6812      	ldr	r2, [r2, #0]
 336:	468b      	mov	fp, r1
 338:	430a      	orrs	r2, r1
 33a:	4694      	mov	ip, r2
 33c:	464a      	mov	r2, r9
 33e:	4661      	mov	r1, ip
 340:	6011      	str	r1, [r2, #0]
 342:	2284      	movs	r2, #132	; 0x84
 344:	4641      	mov	r1, r8
 346:	0052      	lsls	r2, r2, #1
 348:	50a1      	str	r1, [r4, r2]
 34a:	2e02      	cmp	r6, #2
 34c:	d1bb      	bne.n	2c6 <__register_exitproc+0x3a>
 34e:	0002      	movs	r2, r0
 350:	465c      	mov	r4, fp
 352:	328d      	adds	r2, #141	; 0x8d
 354:	32ff      	adds	r2, #255	; 0xff
 356:	6811      	ldr	r1, [r2, #0]
 358:	430c      	orrs	r4, r1
 35a:	6014      	str	r4, [r2, #0]
 35c:	e7b3      	b.n	2c6 <__register_exitproc+0x3a>
 35e:	0020      	movs	r0, r4
 360:	304d      	adds	r0, #77	; 0x4d
 362:	30ff      	adds	r0, #255	; 0xff
 364:	50e0      	str	r0, [r4, r3]
 366:	e7a7      	b.n	2b8 <__register_exitproc+0x2c>
 368:	6828      	ldr	r0, [r5, #0]
 36a:	f7ff ff8d 	bl	288 <__retarget_lock_release_recursive>
 36e:	2001      	movs	r0, #1
 370:	4240      	negs	r0, r0
 372:	e7b1      	b.n	2d8 <__register_exitproc+0x4c>
 374:	20000428 	.word	0x20000428
 378:	00000380 	.word	0x00000380
 37c:	00000000 	.word	0x00000000

00000380 <_global_impure_ptr>:
 380:	20000000                                ... 

00000384 <_init>:
 384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 386:	46c0      	nop			; (mov r8, r8)
 388:	bcf8      	pop	{r3, r4, r5, r6, r7}
 38a:	bc08      	pop	{r3}
 38c:	469e      	mov	lr, r3
 38e:	4770      	bx	lr

00000390 <__init_array_start>:
 390:	00000229 	.word	0x00000229

00000394 <__frame_dummy_init_array_entry>:
 394:	000000dd                                ....

00000398 <_fini>:
 398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 39a:	46c0      	nop			; (mov r8, r8)
 39c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 39e:	bc08      	pop	{r3}
 3a0:	469e      	mov	lr, r3
 3a2:	4770      	bx	lr

000003a4 <__fini_array_start>:
 3a4:	000000b5 	.word	0x000000b5
